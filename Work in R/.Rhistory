getwd()
method_a_scores <- c(65, 75, 80, 90, 70, 85, 95, 78, 88, 92)
method_B_scores <- c(60, 70, 75, 85, 72, 82, 88, 76, 90, 85)
method_A_scores <- c(65, 75, 80, 90, 70, 85, 95, 78, 88, 92)
#combine the data into a data frame
data <- data.frame(Method = rep(c("a", "B"), each = 10), Scores = c(method_A_scores, method_B_scores))
#combine the data into a data frame
data <- data.frame(Method = rep(c("A", "B"), each = 10), Scores = c(method_A_scores, method_B_scores))
#Display the first row in the data set
head(data)
#boxplot using boxplot()
boxplot(Score-Method, data = data)
#boxplot using boxplot()
boxplot(Scores-Method, data = data)
#Display the first row in the data set
head(data)
#boxplot using boxplot()
boxplot(Scores-Method, data = data)
#combine the data into a data frame
data <- data.frame(Method = rep(c("A", "B"), each = 10), Scores = c(method_A_scores, method_B_scores))
#Display the first row in the data set
head(data)
#boxplot using boxplot()
boxplot(Scores-Method, data = data)
#boxplot using boxplot()
boxplot(Scores~Method, data = data)
#Frequency plot using hist()
hist(data$Scores, col = "lightblue")
median(blood_pressure)
blood_pressure <- c(96, 119, 119, 108, 126, 128, 110, 105, 94)
median(blood_pressure)
range(blood_pressure)
quartiles(blood_pressure)
Q1(blood_pressure)
q1(blood_pressure)
quantile(1,blood_pressure)
quantile(1,blood_pressure)
quantile(blood_pressure)
iqr(blood_pressure)
IQR(blood_pressure)
boxplot(blood_pressure)
# 4 calculate the mean, the standard deviation,and the variance.
mean(blood_pressure)
sd(blood_pressure)
var(blood_pressure)
#1.7
#1 Read the data into R
data_1 <- c(125.1, 114.6, 99.3, 119.1, 109.6,
102.0, 104.9, 109.6, 134.0, 108.6,
120.3, 98.7, 104.2, 91.4, 115.3,
107.7, 97.8, 126.4, 104.8, 118.8)
#2 calculate the standard deviation and variance f the cone lengths.
#what is the relationship between the two numbers?
sd(data_1)
var(data_1)
boxplot(data_1)
#3 . Use hist() to plot a histogram of the cone lengths. Use
#boxplot() to plot a modified boxplot. What can you discern
#about the cone lengths from the two figures?
hist(data_1)
#4  Construct a new vector with the name conelenm which contains
#the same lengths but now measured in centimeters. How will
#the mean and standard deviation change after we change the
#units?
data_2 <- data_1 / 10
sd(data_2)
mean(data_2)
# 5 Plot a histogram and boxplot of the transformed data (use
#hist()). You can choose if you want to change the intervals on
#the x-axis or if you want frequencies or relative frequencies on
#the y-axis. What can you say about the shape of the distribution?
#Is it symmetric, skewed to the right, or skewed to the left?
hist(data_2)
boxplot(data_2)
# 5 Plot a histogram and boxplot of the transformed data (use
#hist()). You can choose if you want to change the intervals on
#the x-axis or if you want frequencies or relative frequencies on
#the y-axis. What can you say about the shape of the distribution?
#Is it symmetric, skewed to the right, or skewed to the left?
hist(data_2, freq = FALSE)
# 5 Plot a histogram and boxplot of the transformed data (use
#hist()). You can choose if you want to change the intervals on
#the x-axis or if you want frequencies or relative frequencies on
#the y-axis. What can you say about the shape of the distribution?
#Is it symmetric, skewed to the right, or skewed to the left?
hist(data_2, freq = FALSE)
# 5 Plot a histogram and boxplot of the transformed data (use
#hist()). You can choose if you want to change the intervals on
#the x-axis or if you want frequencies or relative frequencies on
#the y-axis. What can you say about the shape of the distribution?
#Is it symmetric, skewed to the right, or skewed to the left?
hist(data_2, freq = FALSE)
Prevalence = c(3.5, 5.3, 7.8, 11.8, 18.3)
Year = c(1992, 1994, 1996, 1998, 2000),
#United States Special Education Data”, Pediatrics, 115 (2205): e277-e282.).
#Year Prevalence
#1992 3.5
#1994 5.3
#1996 7.8
#1998 11.8
#2000 18.3
autism_data <- data.frame(
Year = c(1992, 1994, 1996, 1998, 2000),
Prevalence = c(3.5, 5.3, 7.8, 11.8, 18.3))
install.packages("readxl")
# 2 Enter the values of the table into an Excel sheet, then import the data
#set to RStudio. Use Google (or other search engines) to find out how to
#import data sets from Excel into RStudio.
autism_excel_file <- "autism_data.xlsx"
autism_excel_data <- read_excel(autism_excel_file)
# 2 Enter the values of the table into an Excel sheet, then import the data
#set to RStudio. Use Google (or other search engines) to find out how to
#import data sets from Excel into RStudio.
library(readxl)
autism_excel_file <- "autism_data.xlsx"
autism_excel_data <- read_excel(autism_excel_file)
autism_excel_file <- "C:\Users\Frederik\OneDrive\Dokumenter\autism_data.xlsx"
autism_excel_file <- "Dokumenter\autism_data.xlsx"
autism_excel_data <- read_excel(autism_excel_file)
autism_excel_file <- "C:\Users\Frederik\OneDrive\Dokumenter\autism_data.xlsx"
autism_excel_file <- "\Users\Frederik\OneDrive\Dokumenter\autism_data.xlsx"
autism_excel_data <- read_excel("C:\Users\Frederik\OneDrive\Dokumenter\autism_data.xlsx")
autism_excel_data <- read_excel("/Users\Frederik\OneDrive\Dokumenter\autism_data.xlsx")
autism_excel_data <- read_excel("/Users/Frederik/OneDrive/Dokumenter/autism_data.xlsx")
print(autism_excel_data)
#3. Make a scatter plot of the data set. Add labels for each of the axes as
#well as a title. Again, Google is your friend.
plot(autism_excel_data,$year, autism_excel_data$prevalence,
#3. Make a scatter plot of the data set. Add labels for each of the axes as
#well as a title. Again, Google is your friend.
plot(autism_excel_data$year, autism_excel_data$prevalence,
xlab = "year",
ylab = "prevalence",
main = "Scatter plot of Autism")
# Output the average sample variance
average_sample_variance
#Set the seed for reproducibility
set.seed(123)
# Define the population as a vector based on given probabilities
population <- c(rep(2, 25), rep(6, 75)) # 25% twos and 75% sixes
return(var(sample))
# Function to take a sample and calculate its variance
sample_variance <- function(population, sample_size) {
sample <- sample(population, sample_size)
return(var(sample))
}
# Simulate taking 1000 samples of size 3 and calculate their variances
sample_variances <- replicate(1000, sample_variance(population, 3))
# Calculate the average of the sample variances
average_sample_variance <- mean(sample_variances)
# Output the average sample variance
average_sample_variance
hist(sample_variances, breaks = 50, main = "Distribution of Sample Variances", xlab="Sample Variance")
hist(sample_variances, breaks = 10, main = "Distribution of Sample Variances", xlab="Sample Variance")
hist(sample_variances, breaks = 50, main = "Distribution of Sample Variances", xlab="Sample Variance")
View(autism_data)
#Let's have a look at our data
head(heifers_dung)
#Let's have a look at our data
head(heifers_dung)
#Let's have a look at our data
head(heifers_dung)
